plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "org.sonarqube" version "2.7"
	id 'jacoco'
	id 'java'
}

group = 'com.paylocity.internet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter:2.1.3.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:2.2.5.RELEASE'


	// Swagger Doc
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	compileOnly 'org.projectlombok:lombok'

	// Lombok
	annotationProcessor 'org.projectlombok:lombok'

	// AWS
	implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.870'
	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'

	// Testing
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.sources', 'src/main'
		property 'sonar.tests', 'src/test'
		property 'sonar.java.coveragePlugin', 'jacoco'
		property 'sonar.junit.reportsPaths', 'buidl/test-results'
		property 'sonar.jacoco.reportPath', 'build/jacoco/test.exec'
		property 'sonar.jacoco.coverage.reportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}

tasks['sonarqube'].dependsOn test

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'com/paylocity/internet/insurancedeductionapi/model/**',
							'com/paylocity/internet/insurancedeductionapi/InsuranceDeductionApiApplication.java',
							'com/paylocity/internet/insurancedeductionapi/controller/**'
					])
		}))
	}
}
